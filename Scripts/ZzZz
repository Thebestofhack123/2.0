-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?
-- why bother skidding?


local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local CollectionService = game:GetService("CollectionService")
local TeleportService = game:GetService("TeleportService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local HttpService = game:GetService("HttpService")

local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- Store ESP state in _G for persistence
_G.GrowAGardenESP = _G.GrowAGardenESP or {
    Enabled = true,
    WebhookUrl = "",
    LastNotified = {},
    Position = UDim2.new(0.5, -110, 0.5, -80)
}

-- List of rare or higher-tier pets
local RARE_PETS = {
    "Dragonfly", "Disco Bee", "Raccoon", "Bear Bee", "Mole", "Cow", "Sea Otter", "Silver Monkey", "Moon Cat",
    "Praying Mantis", "Giant Ant", "Caterpillar", "Night Owl", "Polar Bear", "Red Fox", "Red Giant Ant", "Squirrel",
    "Butterfly", "Anti Bee", "Queen Bee", "Petal Bee", "Honey Bee", "Bee", "Chicken Zombie"
}

-- Executor-friendly webhook sender
local function sendWebhook(data)
    if not data or type(data) ~= "table" then
        warn("Invalid webhook data: Expected a table")
        return false
    end

    local json
    local success, result = pcall(function()
        return HttpService:JSONEncode(data)
    end)
    if not success then
        warn("Failed to encode JSON: " .. tostring(result))
        return false
    end
    json = result

    local request = (syn and syn.request) or (http and http.request) or (http_request) or (request)
    if not request then
        warn("No HTTP request function available")
        return false
    end

    success, result = pcall(request, {
        Url = _G.GrowAGardenESP.WebhookUrl,
        Method = "POST",
        Headers = {["Content-Type"] = "application/json"},
        Body = json
    })

    if not success then
        warn("Failed to send webhook: " .. tostring(result))
        return false
    end

    if result and result.StatusCode and result.StatusCode >= 200 and result.StatusCode < 300 then
        print("Webhook sent successfully!")
        return true
    else
        warn("Webhook failed with status " .. tostring(result.StatusCode) .. ": " .. tostring(result.Body or "No body"))
        return false
    end
end

-- Function to check if a pet is rare
local function isRarePet(petName)
    for _, rarePet in ipairs(RARE_PETS) do
        if petName == rarePet then
            return true
        end
    end
    return false
end

-- Function to notify about a rare pet via webhook
local function notifyRarePet(petName, eggName)
    if _G.GrowAGardenESP.WebhookUrl == "" then return end
    if _G.GrowAGardenESP.LastNotified[petName] and os.time() - _G.GrowAGardenESP.LastNotified[petName] < 300 then return end
    
    local embed = {
        {
            title = "🎉 Rare Pet Appeared! 🎉",
            description = string.format("You hatched a **%s** from a **%s** egg!", petName, eggName),
            color = 0x00FF00,
            fields = {
                {
                    name = "Game",
                    value = string.format("[%s](https://www.roblox.com/games/%d)", game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name, game.PlaceId),
                    inline = true
                },
                {
                    name = "Player",
                    value = LocalPlayer.Name,
                    inline = true
                },
                {
                    name = "Server",
                    value = game.JobId,
                    inline = true
                }
            },
            timestamp = DateTime.now():ToIsoDate(),
            footer = {
                text = "Pet Notifier by Polleser"
            }
        }
    }
    
    local success = sendWebhook({
        embeds = embed,
        username = "Polleser Hub",
        avatar_url = "https://cdn.discordapp.com/attachments/1320056693069185105/1381307158620012614/image-11.png?ex=68470a0a&is=6845b88a&hm=5f0eeafd527427bafd57bc2c8a0a45014e90a78afee8a086ae73430d0e1ea09b&"
    })
    
    if success then
        _G.GrowAGardenESP.LastNotified[petName] = os.time()
    end
end

-- Function to check if GUI already exists to prevent duplicates
local function checkExistingGui()
    return PlayerGui:FindFirstChild("GrowAGardenESP")
end

-- Function to create and initialize the GUI
local function createGui()
    -- Prevent duplicate GUIs
    if checkExistingGui() then
        checkExistingGui():Destroy()
    end

    -- Create a ScreenGui for the UI
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "GrowAGardenESP"
    screenGui.Parent = PlayerGui
    screenGui.ResetOnSpawn = false

    -- Create the main frame with rounded corners
    local mainFrame = Instance.new("Frame")
    mainFrame.Size = UDim2.new(0, 250, 0, 250) -- Increased height for webhook input
    mainFrame.Position = _G.GrowAGardenESP.Position
    mainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
    mainFrame.BackgroundTransparency = 0.2
    mainFrame.BorderSizePixel = 0
    mainFrame.Parent = screenGui

    -- Add rounded corners
    local uiCorner = Instance.new("UICorner")
    uiCorner.CornerRadius = UDim.new(0, 12)
    uiCorner.Parent = mainFrame

    -- Add colorful gradient
    local gradient = Instance.new("UIGradient")
    gradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromRGB(80, 40, 150)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(40, 80, 180))
    })
    gradient.Rotation = 45
    gradient.Parent = mainFrame

    -- Add animated stroke
    local uiStroke = Instance.new("UIStroke")
    uiStroke.Color = Color3.fromRGB(100, 100, 255)
    uiStroke.Thickness = 2
    uiStroke.Transparency = 0.5
    uiStroke.Parent = mainFrame

    -- Animate the stroke
    local strokeTween = TweenService:Create(uiStroke, TweenInfo.new(2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, -1, true), {
        Transparency = 0.8
    })
    strokeTween:Play()

    -- Title with glowing effect
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, -20, 0, 40)
    title.Position = UDim2.new(0, 10, 0, 10)
    title.BackgroundTransparency = 1
    title.Text = "Pet Esp | PolleserHub"
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.TextScaled = true
    title.Font = Enum.Font.GothamBold
    title.TextSize = 20
    title.TextStrokeTransparency = 0.7
    title.TextStrokeColor3 = Color3.fromRGB(150, 100, 255)
    title.Parent = mainFrame

    -- ESP Toggle Button
    local espButton = Instance.new("TextButton")
    espButton.Size = UDim2.new(0.9, 0, 0, 40)
    espButton.Position = UDim2.new(0.05, 0, 0, 60)
    espButton.BackgroundColor3 = _G.GrowAGardenESP.Enabled and Color3.fromRGB(80, 180, 80) or Color3.fromRGB(180, 80, 80)
    espButton.Text = _G.GrowAGardenESP.Enabled and "ESP: ON" or "ESP: OFF"
    espButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    espButton.TextScaled = true
    espButton.Font = Enum.Font.GothamBold
    espButton.TextSize = 14
    espButton.AutoButtonColor = false
    espButton.Parent = mainFrame

    -- Add rounded corners to ESP button
    local espButtonCorner = Instance.new("UICorner")
    espButtonCorner.CornerRadius = UDim.new(0, 8)
    espButtonCorner.Parent = espButton

    -- Add hover effect to ESP button
    espButton.MouseEnter:Connect(function()
        local tween = TweenService:Create(espButton, TweenInfo.new(0.2), {
            BackgroundTransparency = 0.2,
            Size = UDim2.new(0.92, 0, 0, 42)
        })
        tween:Play()
    end)

    espButton.MouseLeave:Connect(function()
        local tween = TweenService:Create(espButton, TweenInfo.new(0.2), {
            BackgroundTransparency = 0,
            Size = UDim2.new(0.9, 0, 0, 40)
        })
        tween:Play()
    end)

    -- Webhook Input Frame
    local webhookFrame = Instance.new("Frame")
    webhookFrame.Size = UDim2.new(0.9, 0, 0, 40)
    webhookFrame.Position = UDim2.new(0.05, 0, 0, 110)
    webhookFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
    webhookFrame.Parent = mainFrame

    local webhookCorner = Instance.new("UICorner")
    webhookCorner.CornerRadius = UDim.new(0, 8)
    webhookCorner.Parent = webhookFrame

    local webhookTextBox = Instance.new("TextBox")
    webhookTextBox.Size = UDim2.new(1, -10, 1, -10)
    webhookTextBox.Position = UDim2.new(0, 5, 0, 5)
    webhookTextBox.BackgroundTransparency = 1
    webhookTextBox.Text = _G.GrowAGardenESP.WebhookUrl
    webhookTextBox.PlaceholderText = "Discord Webhook URL"
    webhookTextBox.TextColor3 = Color3.fromRGB(200, 200, 255)
    webhookTextBox.TextScaled = true
    webhookTextBox.Font = Enum.Font.Gotham
    webhookTextBox.TextSize = 14
    webhookTextBox.ClearTextOnFocus = false
    webhookTextBox.Parent = webhookFrame

    -- Save Webhook Button
    local saveWebhookButton = Instance.new("TextButton")
    saveWebhookButton.Size = UDim2.new(0.9, 0, 0, 30)
    saveWebhookButton.Position = UDim2.new(0.05, 0, 0, 160)
    saveWebhookButton.BackgroundColor3 = Color3.fromRGB(80, 80, 180)
    saveWebhookButton.Text = "Save Webhook"
    saveWebhookButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    saveWebhookButton.TextScaled = true
    saveWebhookButton.Font = Enum.Font.GothamBold
    saveWebhookButton.TextSize = 14
    saveWebhookButton.AutoButtonColor = false
    saveWebhookButton.Parent = mainFrame

    local saveButtonCorner = Instance.new("UICorner")
    saveButtonCorner.CornerRadius = UDim.new(0, 8)
    saveButtonCorner.Parent = saveWebhookButton

    saveWebhookButton.MouseEnter:Connect(function()
        local tween = TweenService:Create(saveWebhookButton, TweenInfo.new(0.2), {
            BackgroundColor3 = Color3.fromRGB(100, 100, 200),
            Size = UDim2.new(0.92, 0, 0, 32)
        })
        tween:Play()
    end)

    saveWebhookButton.MouseLeave:Connect(function()
        local tween = TweenService:Create(saveWebhookButton, TweenInfo.new(0.2), {
            BackgroundColor3 = Color3.fromRGB(80, 80, 180),
            Size = UDim2.new(0.9, 0, 0, 30)
        })
        tween:Play()
    end)

    saveWebhookButton.MouseButton1Click:Connect(function()
        _G.GrowAGardenESP.WebhookUrl = webhookTextBox.Text
        saveWebhookButton.Text = "Saved!"
        task.wait(1.5)
        saveWebhookButton.Text = "Save Webhook"
    end)

    -- Rejoin Server Button with actual teleport functionality
    local rejoinButton = Instance.new("TextButton")
    rejoinButton.Size = UDim2.new(0.9, 0, 0, 40)
    rejoinButton.Position = UDim2.new(0.05, 0, 0, 200)
    rejoinButton.BackgroundColor3 = Color3.fromRGB(100, 100, 255)
    rejoinButton.Text = "Rejoin Server"
    rejoinButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    rejoinButton.TextScaled = true
    rejoinButton.Font = Enum.Font.GothamBold
    rejoinButton.TextSize = 14
    rejoinButton.AutoButtonColor = false
    rejoinButton.Parent = mainFrame

    -- Add rounded corners to Rejoin button
    local rejoinButtonCorner = Instance.new("UICorner")
    rejoinButtonCorner.CornerRadius = UDim.new(0, 8)
    rejoinButtonCorner.Parent = rejoinButton

    -- Add hover effect to Rejoin button
    rejoinButton.MouseEnter:Connect(function()
        local tween = TweenService:Create(rejoinButton, TweenInfo.new(0.2), {
            BackgroundColor3 = Color3.fromRGB(120, 120, 255),
            Size = UDim2.new(0.92, 0, 0, 42)
        })
        tween:Play()
    end)

    rejoinButton.MouseLeave:Connect(function()
        local tween = TweenService:Create(rejoinButton, TweenInfo.new(0.2), {
            BackgroundColor3 = Color3.fromRGB(100, 100, 255),
            Size = UDim2.new(0.9, 0, 0, 40)
        })
        tween:Play()
    end)

    -- Working rejoin function
    rejoinButton.MouseButton1Click:Connect(function()
        -- Save current position before teleporting
        _G.GrowAGardenESP.Position = mainFrame.Position
        
        -- Create a loading effect
        local originalText = rejoinButton.Text
        rejoinButton.Text = "Rejoining..."
        
        -- Attempt to teleport to the same server
        local success, errorMsg = pcall(function()
            TeleportService:TeleportToPlaceInstance(game.PlaceId, game.JobId, LocalPlayer)
        end)
        
        -- If teleport fails, show error and reset button
        if not success then
            rejoinButton.Text = "Error - Try Again"
            task.wait(2)
            rejoinButton.Text = originalText
            warn("Failed to rejoin server:", errorMsg)
        end
    end)

    -- Make the frame draggable
    local dragging
    local dragInput
    local dragStart
    local startPos

    local function update(input)
        local delta = input.Position - dragStart
        local newPos = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        mainFrame.Position = newPos
        _G.GrowAGardenESP.Position = newPos
    end

    mainFrame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = mainFrame.Position
            
            -- Bounce effect when clicked
            local tween = TweenService:Create(mainFrame, TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
                Size = UDim2.new(0, 245, 0, 245)
            })
            tween:Play()
            tween.Completed:Wait()
            TweenService:Create(mainFrame, TweenInfo.new(0.2, Enum.EasingStyle.Bounce, Enum.EasingDirection.Out), {
                Size = UDim2.new(0, 250, 0, 250)
            }):Play()
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    mainFrame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end)

    -- ESP System
    local espCache = {}
    local espEnabled = _G.GrowAGardenESP.Enabled

    -- Function to get the hatch function and upvalues
    local function getHatchData()
        local success, hatchFunction = pcall(function()
            return getupvalue(getupvalue(getconnections(ReplicatedStorage.GameEvents.PetEggService.OnClientEvent)[1].Function, 1), 2)
        end)
        if success and hatchFunction then
            return hatchFunction, getupvalue(hatchFunction, 1), getupvalue(hatchFunction, 2)
        end
        return nil, nil, nil
    end

    local hatchFunction, eggModels, eggPets = getHatchData()

    -- Function to get the egg model from its object ID
    local function getObjectFromId(objectId)
        if not eggModels then return end
        for eggModel in eggModels do
            if eggModel:GetAttribute("OBJECT_UUID") ~= objectId then continue end
            return eggModel
        end
    end

    -- Function to create an ESP BillboardGui
    local function CreateEspGui(object, text, isRare)
        local billboard = Instance.new("BillboardGui")
        billboard.Name = "PetEggESP"
        billboard.Adornee = object:FindFirstChildWhichIsA("BasePart") or object.PrimaryPart or object
        billboard.Size = UDim2.new(0, 150, 0, 30)
        billboard.StudsOffset = Vector3.new(0, 2.5, 0)
        billboard.AlwaysOnTop = true

        local label = Instance.new("TextLabel")
        label.Parent = billboard
        label.Size = UDim2.new(1, 0, 1, 0)
        label.BackgroundTransparency = 1
        label.Text = text
        label.TextColor3 = isRare and Color3.new(0, 1, 1) or Color3.new(1, 1, 1)
        label.TextStrokeTransparency = 0.5
        label.TextStrokeColor3 = isRare and Color3.new(0, 0, 1) or Color3.new(0, 0, 0)
        label.TextScaled = true
        label.Font = Enum.Font.GothamBold
        label.Parent = billboard

        billboard.Parent = object
        return billboard
    end

    -- Function to update ESP text and color
    local function UpdateEsp(objectId, petName)
        local object = getObjectFromId(objectId)
        if not object or not espCache[objectId] then return end

        local eggName = object:GetAttribute("EggName")
        local labelGui = espCache[objectId]
        if labelGui and labelGui:FindFirstChildOfClass("TextLabel") then
            labelGui.TextLabel.Text = string.format("%s | %s", eggName, petName)
            labelGui.TextLabel.TextColor3 = isRarePet(petName) and Color3.new(0, 1, 1) or Color3.new(1, 1, 1)
            labelGui.TextLabel.TextStrokeColor3 = isRarePet(petName) and Color3.new(0, 0, 1) or Color3.new(0, 0, 0)
            
            -- Notify if rare pet
            if isRarePet(petName) then
                notifyRarePet(petName, eggName)
            end
        end
    end

    -- Function to add ESP to an egg
    local function AddEsp(object)
        if object:GetAttribute("OWNER") ~= LocalPlayer.Name then return end

        local eggName = object:GetAttribute("EggName")
        local petName = eggPets and eggPets[object:GetAttribute("OBJECT_UUID")] or "?"
        local objectId = object:GetAttribute("OBJECT_UUID")
        if not objectId then return end

        local esp = CreateEspGui(object, string.format("%s | %s", eggName, petName), isRarePet(petName))
        espCache[objectId] = esp
    end

    -- Function to remove ESP from an egg
    local function RemoveEsp(object)
        if object:GetAttribute("OWNER") ~= LocalPlayer.Name then return end

        local objectId = object:GetAttribute("OBJECT_UUID")
        if espCache[objectId] then
            espCache[objectId]:Destroy()
            espCache[objectId] = nil
        end
    end

    -- ESP Toggle Logic
    espButton.MouseButton1Click:Connect(function()
        espEnabled = not espEnabled
        _G.GrowAGardenESP.Enabled = espEnabled
        
        if espEnabled then
            espButton.Text = "ESP: ON"
            espButton.BackgroundColor3 = Color3.fromRGB(80, 180, 80)
            for _, object in CollectionService:GetTagged("PetEggServer") do
                task.spawn(AddEsp, object)
            end
            CollectionService:GetInstanceAddedSignal("PetEggServer"):Connect(AddEsp)
            CollectionService:GetInstanceRemovedSignal("PetEggServer"):Connect(RemoveEsp)
        else
            espButton.Text = "ESP: OFF"
            espButton.BackgroundColor3 = Color3.fromRGB(180, 80, 80)
            for objectId, billboard in pairs(espCache) do
                billboard:Destroy()
                espCache[objectId] = nil
            end
        end
    end)

    -- Initialize ESP if enabled
    if espEnabled and hatchFunction then
        for _, object in CollectionService:GetTagged("PetEggServer") do
            task.spawn(AddEsp, object)
        end
        CollectionService:GetInstanceAddedSignal("PetEggServer"):Connect(AddEsp)
        CollectionService:GetInstanceRemovedSignal("PetEggServer"):Connect(RemoveEsp)
    end

    -- Hook the EggReadyToHatch event
    if hatchFunction then
        local old
        old = hookfunction(getconnections(ReplicatedStorage.GameEvents.EggReadyToHatch_RE.OnClientEvent)[1].Function, newcclosure(function(objectId, petName)
            if espEnabled then
                UpdateEsp(objectId, petName)
            end
            return old(objectId, petName)
        end))
    end
end

-- Initial GUI creation
createGui()

-- Reconnect if player rejoins
Players.PlayerAdded:Connect(function(player)
    if player == LocalPlayer then
        task.wait(3) -- Wait for everything to load
        createGui()
    end
end)
